apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Chart.Name }}
    environment: {{ .Values.global.env }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        environment: {{ .Values.global.env }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
{{ werf_container_image . | indent 10 }}
          env:
{{ werf_container_env . | indent 12 }}
            - name: ENV
              valueFrom:
                configMapKeyRef:
                  name: tokeninfo
                  key: env
            - name: TOKEN_LIST
              valueFrom:
                configMapKeyRef:
                  name: tokeninfo
                  key: token_list
            - name: TOKEN_IMAGE_DIR
              valueFrom:
                configMapKeyRef:
                  name: tokeninfo
                  key: token_image_dir
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            timeoutSeconds: 10
            initialDelaySeconds: 10
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true