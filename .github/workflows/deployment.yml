name: pull-request-deployment

on:
  issue_comment:
    types: [created]

jobs:
  check_comment:
    runs-on: ubuntu-latest
    steps:
    - name: acknowledge deployment request to commenter
      id: check
      uses: khan/pull-request-comment-trigger@master
      with:
        trigger: /deploy
        reaction: rocket
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    outputs:
      triggered: ${{ steps.check.outputs.triggered }}
  
  deploy:
    runs-on: ubuntu-latest
    needs: check_comment
    if: needs.check_comment.outputs.triggered == 'true'
    steps:
    - name: get pull request ref
      id: get_pull_request_ref
      uses: octokit/request-action@v2.x
      with:
        route: GET /repos/:repository/pulls/:issue_id
        repository: ${{ github.repository }}
        issue_id: ${{ github.event.issue.number }}
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

    - name: create deployment
      id: create_deployment
      uses: octokit/request-action@v2.x
      with:
        route: POST /repos/:repository/deployments
        repository: ${{ github.repository }}
        ref: ${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}
        environment: test
        auto_merge: false
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

    - name: set deployment status to in progress
      id: start_deployment
      uses: octokit/request-action@v2.x
      with:
        route: POST /repos/:repository/deployments/:deployment/statuses
        repository: ${{ github.repository }}
        deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
        environment: 'test'
        environment_url: 'https://tokeninfo-test.endpass.com'
        log_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
        state: 'in_progress'
        media_type: '{"previews": ["flash", "ant-man"]}'
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

    - name: deployment logic
      run: |
        sleep 10
        exit $(( $RANDOM % 10 >= 5))

    - name: set deployment status to success
      id: successful_deployment
      uses: octokit/request-action@v2.x
      with:
        route: POST /repos/:repository/deployments/:deployment/statuses
        repository: ${{ github.repository }}
        deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
        environment: 'test'
        environment_url: 'https://tokeninfo-test.endpass.com'
        log_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
        state: 'success'
        media_type: '{"previews": ["ant-man"]}'
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

    - name: set deployment status to failure
      id: failed_deployment
      uses: octokit/request-action@v2.x
      if: failure()
      with:
        route: POST /repos/:repository/deployments/:deployment/statuses
        repository: ${{ github.repository }}
        deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
        environment: 'test'
        environment_url: 'https://tokeninfo-test.endpass.com'
        log_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
        state: 'failure'
        media_type: '{"previews": ["ant-man"]}'
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
